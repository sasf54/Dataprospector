var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(b, a, c) {
    b != Array.prototype && b != Object.prototype && (b[a] = c.value)
};
$jscomp.getGlobal = function(b) {
    return "undefined" != typeof window && window === b ? b : "undefined" != typeof global && null != global ? global : b
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.SYMBOL_PREFIX = "jscomp_symbol_";
$jscomp.initSymbol = function() {
    $jscomp.initSymbol = function() {
    };
    $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol)
};
$jscomp.Symbol = function() {
    var b = 0;
    return function(a) {
        return $jscomp.SYMBOL_PREFIX + (a || "") + b++
    }
}();
$jscomp.initSymbolIterator = function() {
    $jscomp.initSymbol();
    var b = $jscomp.global.Symbol.iterator;
    b || (b = $jscomp.global.Symbol.iterator = $jscomp.global.Symbol("iterator"));
    "function" != typeof Array.prototype[b] && $jscomp.defineProperty(Array.prototype, b, {
        configurable: !0,
        writable: !0,
        value: function() {
            return $jscomp.arrayIterator(this)
        }
    });
    $jscomp.initSymbolIterator = function() {
    }
};
$jscomp.arrayIterator = function(b) {
    var a = 0;
    return $jscomp.iteratorPrototype(function() {
        return a < b.length ? {done: !1, value: b[a++]} : {done: !0}
    })
};
$jscomp.iteratorPrototype = function(b) {
    $jscomp.initSymbolIterator();
    b = {next: b};
    b[$jscomp.global.Symbol.iterator] = function() {
        return this
    };
    return b
};
$jscomp.makeIterator = function(b) {
    $jscomp.initSymbolIterator();
    var a = b[Symbol.iterator];
    return a ? a.call(b) : $jscomp.arrayIterator(b)
};
$jscomp.arrayFromIterator = function(b) {
    for (var a, c = []; !(a = b.next()).done;)c.push(a.value);
    return c
};
$jscomp.arrayFromIterable = function(b) {
    return b instanceof Array ? b : $jscomp.arrayFromIterator($jscomp.makeIterator(b))
};
$jscomp.findInternal = function(b, a, c) {
    b instanceof String && (b = String(b));
    for (var d = b.length, e = 0; e < d; e++) {
        var g = b[e];
        if (a.call(c, g, e, b))return {i: e, v: g}
    }
    return {i: -1, v: void 0}
};
$jscomp.polyfill = function(b, a, c, d) {
    if (a) {
        c = $jscomp.global;
        b = b.split(".");
        for (d = 0; d < b.length - 1; d++) {
            var e = b[d];
            e in c || (c[e] = {});
            c = c[e]
        }
        b = b[b.length - 1];
        d = c[b];
        a = a(d);
        a != d && null != a && $jscomp.defineProperty(c, b, {configurable: !0, writable: !0, value: a})
    }
};
$jscomp.polyfill("Array.prototype.find", function(b) {
    return b ? b : function(a, b) {
        return $jscomp.findInternal(this, a, b).v
    }
}, "es6", "es3");
$jscomp.polyfill("Number.parseFloat", function(b) {
    return b || parseFloat
}, "es6", "es3");
$jscomp.iteratorFromArray = function(b, a) {
    $jscomp.initSymbolIterator();
    b instanceof String && (b += "");
    var c = 0, d = {
        next: function() {
            if (c < b.length) {
                var e = c++;
                return {value: a(e, b[e]), done: !1}
            }
            d.next = function() {
                return {done: !0, value: void 0}
            };
            return d.next()
        }
    };
    d[Symbol.iterator] = function() {
        return d
    };
    return d
};
$jscomp.polyfill("Array.prototype.keys", function(b) {
    return b ? b : function() {
        return $jscomp.iteratorFromArray(this, function(a) {
            return a
        })
    }
}, "es6", "es3");
(function(b, a) {
    "function" === typeof define && define.amd && "function" === typeof require && "function" === typeof require.specified && require.specified("knockout") ? define(["jquery", "knockout"], a) : a(b.jQuery, b.ko)
})(this, function(b, a) {
});
function Dataprospector(b, a) {
    var c = this, d = $(b[0]);
    !$(a).hasOwnProperty("data") || $(a).hasOwnProperty("clone_data") && !1 !== a.clone_data ? this.options = this.mergeOptions($.extend({}, a, $(d).data())) : (b = a.data, a.data = !1, this.options = this.mergeOptions($.extend({}, a, $(d).data())), this.options.data = b);
    this.dom = {
        root: !1,
        tableRoot: !1,
        tableHead: !1,
        tableBody: !1,
        pagination_root: !1,
        pagination_scrollablex: !1,
        filter_root: !1,
        filter_page_simple: !1,
        root_wrapper: !1,
        item_details_placeholder_element: !1,
        filter_sorters: {},
        download_href_placeholder: !1,
        context_menu: !1
    };
    this.filtering = {string: {}, slider: {}, options: {}, array_string: {}, array_slider: {}, advanced: {}};
    this.enums = [];
    this.textSearch = [];
    this.unique_id = this.generateRandomString(8);
    this.dom.root = d;
    if (this.options.import_first_line_headers || !this.options.data || 0 == this.options.data.length && "table" == d[0].tagName.toLowerCase()) {
        a = [];
        var e = [];
        var g = !1;
        0 < this.dom.root.find("thead").length && (g = this.dom.root.find("thead th, thead td"));
        0 < !g && 0 < this.dom.root.find("th").length &&
        (g = $(this.dom.root.find("th")[0]).parent());
        g || (g = $($(this.dom.root.find("tr")[0]).find("td")));
        for (b = 0; b < g.length; b++)e.push($(g[b]).text());
        $(g[0]).parent().detach();
        var f = this.dom.root.find("tr");
        for (b = 0; b < f.length; b++) {
            var h = $(f[b]).find("td"), k = {};
            for (g = 0; g < h.length; g++)k[e[g]] = $(h[g]).text();
            a.push(k)
        }
        this.options.data = a;
        var l = $("<div>");
        $.each(this.dom.root[0].attributes, function() {
            l.attr(this.name, this.value)
        });
        l.insertBefore(this.dom.root);
        this.dom.root.detach();
        this.dom.root = l
    }
    this.options.data &&
    0 != this.options.data.length || "input" != d[0].tagName.toLowerCase() || "file" != $(d[0]).attr("type").toLowerCase() ? this.renderHTML() : (a = [], e = [], g = !1, a = new FileReader, a.readAsText(d[0].files[0], "UTF-8"), a.onload = function(a) {
        c.fileLoad(a, d[0].files[0].type)
    })
}
Dataprospector.prototype = {
    numberFormatter: new Intl.NumberFormat("en-US"),
    dom: {
        root: !1,
        tableRoot: !1,
        tableHead: !1,
        tableBody: !1,
        pagination_root: !1,
        pagination_scrollablex: !1,
        filter_root: !1,
        filter_page_simple: !1,
        filter_page_advanced: !1,
        root_wrapper: !1,
        item_details_placeholder_element: !1,
        filter_advanced_toggle_show: !1,
        filter_toggle_show: !1,
        filter_sorters: {},
        document_subroot: !1
    },
    filtering: {string: {}, slider: {}, options: {}, array_string: {}, array_slider: {}, advanced: {}},
    unique_id: !1,
    enums: [],
    textSearch: [],
    pagination_element: !1,
    rendered_item_pages: 0,
    current_page: 0,
    filters_show: !1,
    advanced_filters_show: !1,
    context_menu_row: !1,
    context_menu_column: !1,
    defaults: {
        data: [],
        clone_data: !0,
        headers: [],
        header_names: [],
        header_types: {},
        filters: [],
        external_filters: !1,
        advanced_filters: !1,
        header_shown: [],
        filters_opened: !1,
        filter_animation_time: 1E3,
        units: {},
        items_per_page: 25,
        sort_by: !1,
        sort_reverse: !1,
        item_details_attribute_per_row: 2,
        selection: !1,
        import_first_line_headers: !1,
        context_menu: !1,
        context_menu_download: !1,
        no_details: !1,
        templates: {
            data_wrapper: '<div class="dataprospector-wrapper"></div>',
            pagination_root: '<div class="row pagination justify-content-center"></div>',
            pagination_next_prev: '<div class="page-item col-2 "><div class="page-link">%direction%</div></div>',
            table_root: '<table class="table table-striped table-bordered data-item_list"></table>',
            table_head: "<thead></thead>",
            table_body: "<tbody></tbody>",
            header_row: "<tr>",
            header_row_end: "</tr>",
            header_column: '<th class="item_%header_column%">%header_column%<div class="form-inline">',
            header_column_end: "</div></th>",
            header_column_sort: '<span class="%sortSelected% lh-half oi oi-arrow-circle-bottom"></span>',
            header_column_sort_reverse: '<span class="%sortSelectedReverse% lh-half oi oi-arrow-circle-top"></span>',
            header_column_selected: "io-grey ",
            header_content_selection: '<input type="checkbox" name="%item_id%" %checked%/>',
            table_row: "<tr>",
            table_row_end: "</tr>",
            table_column: '<td class="item_%header_name%">%value% %unit%</td>',
            item_details_placeholder: '<div class="card item_details"></div>',
            item_details_wrapper: '<div class="card-body"><table class="">',
            item_details_wrapper_end: "</table></div>",
            item_details_row: "<tr>",
            item_details_row_end: "</tr>",
            item_details_attribute: '<td class="font-weight-bold">%header%</td><td class="text-right">%value% %unit%</td>',
            download_href_placeholder: '<a href="download_%unique_id%" style="display:none;"></a>',
            filter_row: '<div class="row w-100">',
            filter_row_end: "</div>",
            filter_root: '<div class=" dataprospectors-filters"></div>',
            filter_root_wrapper: '<div class="dataprospectors-filters-wrapper"></div>',
            filter_page_simple: '<div class=" dataprospectors-filters-page"><h4>Filters</h4></div>',
            filter_page_advanced: '<div class=" dataprospectors-filters-page-advanced"><h4>Advanced filters</h4></div>',
            filter_toggle_show: '<div class="dataprospectors-filter_toggle_show btn-primary oi oi-caret-left"></div>',
            filter_toggle_active_class: "btn-primary",
            filter_toggle_inactive_class: "btn-outline-primary",
            filter_advanced_toggle_show: '<div class="dataprospectors-filter_advanced_toggle_show btn-primary oi oi-caret-left"></div>',
            filter_element_root: "<div class='w-100 mr-2' ></div>",
            filter_element_label: '<div class="label label_%header%">%header%</div>',
            filter_element_sort_up: '<span class="lh-half oi %sort_selected% oi-arrow-circle-bottom"></span>',
            filter_element_sort_down: '<span class="lh-half oi %sort_selected% oi-arrow-circle-top"></span>',
            filter_element_sort_selected: "io-grey ",
            filter_element_input_wrapper: '<div class="filter_element_ input-group filter_%type%"></div>',
            filter_element_input_string: '<input type="text" class="form-control" aria-describedby="basic-addon1" name="%header%"/><span class="input-group-addon oi oi-magnifying-glass" id="basic-addon1"></span>',
            filter_element_input_range: '<div class="d-block w-100"><input data-slider-id=\'filter_%unique_id%_%header%\' type="text" data-slider-min="%min_value%" data-slider-max="%max_value%" data-slider-value="[%min_value%,%max_value%]" value="%min_value%,%max_value%"/></div><div class="w-100 d-block pr-3" ><div class="text-left w-50 float-left">%min_value_formatted% %unit%</div><div class="text-right w-50 float-right">%max_value_formatted% %unit%</div></div>',
            filter_element_input_enum: "<select name='filter_%unique_id%_%header%' multiple></select>",
            filter_element_input_enum_option: '<option value="%value%">%value%</option>',
            context_menu: '<div id="context_%unique_id%" class="context-menu"><ul><li data-action="filter_like">Filter like these</li><li data-action="filter_manual_reset">Reset manual filters</li><li data-action="filter_all_reset">Reset all filters</li>%context_select_remaining%%context_menu_download%</ul></div>',
            context_select_remaining: '<li data-action="unselect_all">Unselect any item</li><li data-action="select_unfiltered">Select all remaining element</li>',
            context_download: '<li class="separator"></li><li data-action="download_JSON" class="download">Download selected as JSON</li><li data-action="download_CSV" class="download">Download selected as CSV</li><li data-action="download_TXT" class="download">Download selected as TXT</li><li data-action="download_XML1" class="download">Download selected as XML (atributes)</li><li data-action="download_XML2" class="download">Download selected as XML (tags)</li><li data-action="download_SQL" class="download">Download selected as SQL</li>'
        }
    },
    constructor: Dataprospector,
    fileLoad: function(b, a) {
        "application/json" == a && (this.options.data = JSON.parse(b.target.result), this.options.selection = !0, this.renderHTML());
        if ("text/csv" == a) {
            this.options.selection = !0;
            b = $.csv.toArrays(b.target.result);
            this.options.header_names = b[0];
            b.splice(0, 1);
            var c;
            this.options.data = [];
            for (a = 0; a < b.length; a++)for (this.options.data[a] = [], c = 0; c < this.options.header_names.length; c++)this.options.data[a][this.options.header_names[c]] = b[a][c];
            this.options.header_names.splice(this.options.header_names.indexOf("selected"),
                1);
            this.renderHTML()
        }
        var d = $("<div>");
        $.each(this.dom.root[0].attributes, function() {
            d.attr(this.name, this.value)
        });
        d.insertBefore(this.dom.root);
        this.dom.root.detach();
        this.dom.root = d;
        this.renderHTML()
    },
    renderHTML: function() {
        for (var b = this, a = $(this.dom.root); "BODY" != a.parent()[0].tagName && "relative" != a.css("position");)a = a.parent();
        this.dom.document_subroot = a;
        if (this.options.filters || this.options.advanced_filters)this.dom.filter_root = $(this.options.templates.filter_root), this.dom.filter_root_wrapper =
            $(this.options.templates.filter_root_wrapper), this.dom.filter_root_wrapper.appendTo(this.dom.filter_root), this.dom.filter_root.appendTo(this.dom.root), this.dom.filter_page_simple = $(this.options.templates.filter_page_simple), this.dom.filter_page_simple.appendTo(this.dom.filter_root_wrapper);
        this.dom.root_wrapper = $(this.options.templates.data_wrapper);
        this.dom.root_wrapper.appendTo(this.dom.root);
        this.dom.pagination_root = $(this.options.templates.pagination_root);
        this.dom.pagination_root.appendTo(this.dom.root_wrapper);
        this.rendered_item_pages = Math.ceil(this.options.data.length / this.options.items_per_page);
        this.options.filters && (this.dom.filter_toggle_show = $(this.options.templates.filter_toggle_show), this.dom.filter_toggle_show.on("click", $.proxy(function(a) {
            b.toggleShowFilters()
        })), this.dom.filter_toggle_show.appendTo(this.dom.pagination_root));
        this.renderPagination();
        this.dom.tableRoot = $(this.options.templates.table_root);
        this.dom.tableRoot.appendTo(this.dom.root_wrapper);
        this.dom.tableHead = $(this.options.templates.table_head);
        this.dom.tableHead.appendTo(this.dom.tableRoot);
        this.dom.tableBody = $(this.options.templates.table_body);
        this.dom.tableBody.appendTo(this.dom.tableRoot);
        this.options.no_details || (this.dom.item_details_placeholder_element = $(this.options.templates.item_details_placeholder), this.dom.item_details_placeholder_element.appendTo(this.dom.root_wrapper));
        this.dom.download_href_placeholder = $(this.options.templates.download_href_placeholder.replace("%unique_id%", this.unique_id));
        this.dom.download_href_placeholder.appendTo(this.dom.root_wrapper);
        this.options.context_menu && (a = this.options.templates.context_menu.replace("%unique_id%", this.unique_id), this.options.selection && this.options.context_menu_download ? (a = a.replace("%context_select_remaining%", this.options.templates.context_select_remaining), a = a.replace("%context_menu_download%", this.options.templates.context_download)) : (a = a.replace("%context_select_remaining%", ""), a = a.replace("%context_menu_download%", "")), this.dom.context_menu = $(a), this.dom.context_menu.on("mouseleave", function(a) {
            b.contextMenuClose()
        }),
            this.dom.context_menu.on("click", function(a) {
                b.contextMenuEvent(a)
            }), this.dom.context_menu.appendTo(this.dom.root_wrapper));
        this.getHeaders();
        this.getColumnTypes();
        this.options.hasOwnProperty("sort_by") && this.options.sort_by ? this.sortBy("") : this.options.sort_by = this.options.header_shown && this.options.header_shown.length ? this.options.header_shown[0] : this.options.headers[0];
        this.renderHeaders();
        this.renderListPaginated();
        this.options.filters && Array.isArray(this.options.filters) && (0 == this.options.filters.length &&
        (this.options.filters = this.options.headers), this.renderFilters());
        this.options.advanced_filters && 0 < this.options.advanced_filters.length && this.renderAdvancedFilters();
        if (this.options.filters_opened) {
            var c = this.options.filter_animation_time;
            this.options.filter_animation_time = 0;
            this.toggleShowFilters(this);
            setTimeout(function() {
                b.options.filter_animation_time = c
            }, 100)
        }
        a = this.dom.root.attr("style");
        this.dom.root.css({position: "absolute", visibility: "hidden", display: "block"});
        var d = this.dom.filter_root_wrapper.height();
        this.dom.filter_root.css("min-height", this.dom.filter_root_wrapper.height() + 5);
        this.dom.root.attr("style", a ? a : "");
        this.dom.root_wrapper.css("min-height", d + 5)
    },
    mergeOptions: function(b) {
        return $.extend(!0, {}, this.defaults, this.options, b)
    },
    filterByString: function(b, a) {
        a = a.toLowerCase();
        var c;
        if (null != a && "" != a) {
            var d = a.split(" ");
            for (a = 0; a < d.length; a++)d[a] = new RegExp(d[a]);
            for (a = 0; a < this.options.data.length; a++)for (c = 0; c < d.length; c++) {
                var e = !0;
                this.options.data[a][b].toLowerCase().match(d[c]) || (e = !1);
                e || (this.options.data[a].filtered_out = !0)
            }
        }
    },
    filterBySlider: function(b, a) {
        var c = a.getValue()[0];
        a = a.getValue()[1];
        this.filterByRange(b, c, a)
    },
    filterByRange: function(b, a, c) {
        var d;
        for (d = 0; d < this.options.data.length; d++)if (this.options.data[d][b] < a || this.options.data[d][b] > c)this.options.data[d].filtered_out = !0
    },
    filterByArraySlider: function(b, a) {
        var c = a.getValue()[0];
        a = a.getValue()[1];
        this.filterByArrayRange(b, c, a)
    },
    filterByArrayRange: function(b, a, c) {
        var d, e;
        for (d = 0; d < this.options.data.length; d++) {
            var g =
                this.options.data[d][b].split(","), f = !1;
            for (e = 0; e < g.length; e++) {
                var h = parseFloat(g[e].trim());
                !isNaN(h) && h >= a && h <= c && (f = !0)
            }
            f || (this.options.data[d].filtered_out = !0)
        }
    },
    filterByArraySelect: function(b, a) {
        null != a && null != a.val() && (a = a.val(), this.filterByString(b, a))
    },
    filterByArrayString: function(b, a) {
        var c, d, e;
        for (c = 0; c < this.options.data.length; c++) {
            var g = !0;
            for (d = 0; d < a.length; d++) {
                var f = this.options.data[c][b].split(",");
                for (e = 0; e < f.length; e++)f[e] = f[e].trim(), f[e] == a[d] && (g = !1)
            }
            g && (this.options.data[c].filtered_out = !0)
        }
    },
    filterByOptions: function(b, a) {
        null != a && null != a.val() && (a = a.val(), this.filterByEnums(b, a))
    },
    filterByEnums: function(b, a) {
        var c = [], d, e;
        for (d = 0; d < a.length; d++)c[d] = new RegExp(a[d].replace("(", "\\(").replace(")", "\\)").replace("+", "\\+"));
        for (d = 0; d < this.options.data.length; d++) {
            var g = !0;
            for (e = 0; e < a.length; e++)this.options.data[d][b].match(c[e]) && (g = !1);
            g && (this.options.data[d].filtered_out = !0)
        }
    },
    getMinMax: function(b) {
        var a, c = Number.POSITIVE_INFINITY, d = Number.NEGATIVE_INFINITY;
        for (a = 0; a < this.options.data.length; a++) {
            var e =
                Number.parseFloat(this.options.data[a][b]);
            e < c && (c = e);
            e > d && (d = e)
        }
        return [c, d]
    },
    getOptions: function(b) {
        var a, c, d = [];
        for (a = 0; a < this.options.data.length; a++) {
            var e = !1;
            for (c = 0; c < d.length; c++)this.options.data[a][b] == d[c] && (e = !0);
            e || (d[d.length] = this.options.data[a][b])
        }
        d.sort();
        return d
    },
    renderHeaders: function() {
        $(this.dom.tableHead).find("*").remove();
        $(this.options.templates.header_row).appendTo(this.tableRootElement);
        var b;
        this.options.header_shown && 0 != this.options.header_shown.length || (this.options.header_shown =
            this.options.headers);
        var a = !1;
        for (b = 0; b < this.options.header_shown.length; b++)this.options.sort_by == this.options.header_shown[b] && (a = !0);
        this.tmp_header_shown = [];
        for (b = 0; b < this.options.header_shown.length; b++)this.tmp_header_shown.push(this.options.header_shown[b]);
        !a && this.options.sort_by && this.tmp_header_shown.push(this.options.sort_by);
        if (this.options.selection) {
            a = $(this.options.templates.header_column.replace("%header_column%", "selected").replace("%header_column%", "selected"));
            var c = "selected" !=
            this.options.sort_by || this.options.sort_reverse ? $(this.options.templates.header_column_sort_reverse.replace("%sortSelectedReverse%", "")) : $(this.options.templates.header_column_sort_reverse.replace("%sortSelectedReverse%", this.options.templates.header_column_selected));
            var d = "selected" == this.options.sort_by && this.options.sort_reverse ? $(this.options.templates.header_column_sort.replace("%sortSelected%", this.options.templates.header_column_selected)) : $(this.options.templates.header_column_sort.replace("%sortSelected%",
                ""));
            var e = "selected", g = this;
            d.attr("data-sort-by", e);
            d.attr("data-sort-reverse", "true");
            d.on("click", function(a) {
                g.sortBy(a)
            });
            c.attr("data-sort-by", e);
            c.attr("data-sort-reverse", "false");
            c.on("click", function(a) {
                g.sortBy(a)
            });
            c.appendTo(a);
            d.appendTo(a);
            a.appendTo(this.dom.tableHead)
        }
        for (b = 0; b < this.tmp_header_shown.length; b++)e = this.tmp_header_shown[b], this.options.header_names && this.options.header_names.hasOwnProperty(this.tmp_header_shown[b]) && (e = this.options.header_names[this.tmp_header_shown[b]]),
            a = $(this.options.templates.header_column.replace("%header_column%", e).replace("%header_column%", e)), c = this.options.sort_by != e || this.options.sort_reverse ? $(this.options.templates.header_column_sort_reverse.replace("%sortSelectedReverse%", "")) : $(this.options.templates.header_column_sort_reverse.replace("%sortSelectedReverse%", this.options.templates.header_column_selected)), d = this.options.sort_by == e && this.options.sort_reverse ? $(this.options.templates.header_column_sort.replace("%sortSelected%", this.options.templates.header_column_selected)) :
            $(this.options.templates.header_column_sort.replace("%sortSelected%", "")), g = this, d.attr("data-sort-by", e), d.attr("data-sort-reverse", "true"), d.on("click", function(a) {
            g.sortBy(a)
        }), c.attr("data-sort-by", e), c.attr("data-sort-reverse", "false"), c.on("click", function(a) {
            g.sortBy(a)
        }), c.appendTo(a), d.appendTo(a), a.appendTo(this.dom.tableHead)
    },
    sortBy: function(b) {
        b && b.hasOwnProperty("currentTarget") && (this.options.sort_by = $(b.currentTarget).attr("data-sort-by"), this.options.sort_reverse = "true" == $(b.currentTarget).attr("data-sort-reverse"));
        b = this.options.header_types[this.options.sort_by];
        var a = this, c = !1;
        if (this.filtering.advanced) {
            var d, e = Object.keys(this.filtering.advanced);
            for (d = 0; d < e.length; d++)e[d] == this.options.sort_by && (c = !0)
        }
        if ("range" == b || c)this.options.sort_reverse ? this.options.data.sort(function(b, c) {
            return c[a.options.sort_by] - b[a.options.sort_by]
        }) : this.options.data.sort(function(b, c) {
            return b[a.options.sort_by] - c[a.options.sort_by]
        });
        if ("string" == b || "options" == b || "array_string" == b)this.options.sort_reverse ? this.options.data.sort(function(b,
                                                                                                                               c) {
            return c[a.options.sort_by].toLowerCase().localeCompare(b[a.options.sort_by].toLowerCase())
        }) : this.options.data.sort(function(b, c) {
            return b[a.options.sort_by].toLowerCase().localeCompare(c[a.options.sort_by].toLowerCase())
        });
        this.renderHeaders();
        this.renderListPaginated();
        if (this.filtering.advanced) {
            e = Object.keys(this.filtering.advanced);
            for (d = 0; d < e.length; d++)this.dom.filter_sorters[e[d]].up.removeClass(this.options.templates.header_column_selected), this.dom.filter_sorters[e[d]].down.removeClass(this.options.templates.header_column_selected);
            this.options.sort_reverse ? this.dom.filter_sorters.hasOwnProperty(this.options.sort_by) && this.dom.filter_sorters[this.options.sort_by].up.addClass(this.options.templates.header_column_selected) : this.dom.filter_sorters.hasOwnProperty(this.options.sort_by) && this.dom.filter_sorters[this.options.sort_by].down.addClass(this.options.templates.header_column_selected)
        }
        for (d = 0; d < this.options.filters.length; d++)this.dom.filter_sorters[this.options.filters[d]].up.removeClass(this.options.templates.header_column_selected),
            this.dom.filter_sorters[this.options.filters[d]].down.removeClass(this.options.templates.header_column_selected);
        this.options.sort_reverse ? this.dom.filter_sorters.hasOwnProperty(this.options.sort_by) && this.dom.filter_sorters[this.options.sort_by].up.addClass(this.options.templates.header_column_selected) : this.dom.filter_sorters.hasOwnProperty(this.options.sort_by) && this.dom.filter_sorters[this.options.sort_by].down.addClass(this.options.templates.header_column_selected)
    },
    disableUnavailableOptions: function(b,
                                        a) {
        a = a.parent().parent().find("ul.multiselect-container li input");
        var c = [], d, e;
        for (d = e = 0; d < this.options.data.length; d++)this.options.data[d].filtered_out || (c[e++] = {name: this.options.data[d][b]});
        for (d = 2; d < a.length; d++)$(a[d]).parent("label").parent("a").parent("li").addClass("unavailable");
        for (d = 0; d < c.length; d++)for (e = 0; e < a.length; e++)a[e].value == c[d].name && $(a[e]).parent("label").parent("a").parent("li").removeClass("unavailable")
    },
    renderPagination: function() {
        var b = this.dom.pagination_root;
        b.children().not(".dataprospectors-filter_toggle_show").detach();
        var a = this;
        var c = $(this.options.templates.pagination_next_prev.replace("%direction%", "Previous"));
        c.on("click", function(b) {
            a.gotoPage(b)
        });
        c.appendTo(b);
        this.dom.pagination_scrollablex = $('<div class="scrollablex col-7">');
        for (c = 0; c < this.rendered_item_pages; c++) {
            var d = '<div class="page-item';
            0 == c && (d += " active");
            d += '"><div class="page-link">' + (c + 1) + "</div></div>";
            d = $(d);
            d.on("click", function(b) {
                a.gotoPage(b)
            });
            d.appendTo(this.dom.pagination_scrollablex)
        }
        this.dom.pagination_scrollablex.appendTo(b);
        c = $(this.options.templates.pagination_next_prev.replace("%direction%", "Next"));
        c.on("click", function(b) {
            a.gotoPage(b)
        });
        c.appendTo(b);
        c.after(this.dom.filter_toggle_show)
    },
    gotoPage: function(b) {
        b = b.currentTarget;
        var a = parseInt($(b).text());
        if (isNaN(a)) {
            var c = $(b).parent().parent().find(".scrollablex");
            "Previous" == $(b).text() && 0 < this.current_page && (this.current_page--, c.finish().animate({scrollLeft: Math.round(c.find(".page-item").get(this.current_page).offsetLeft - c.width() / 2)}, 800));
            "Next" == $(b).text() &&
            this.current_page < this.rendered_item_pages - 1 && (this.current_page++, c.finish().animate({scrollLeft: Math.round(c.find(".page-item").get(this.current_page).offsetLeft - c.width() / 2)}, 800));
            this.dom.pagination_root.find("div").removeClass("active");
            $(this.dom.pagination_scrollablex.find(">div")[this.current_page]).addClass("active")
        } else c = $(b).parent().parent().find(".scrollablex"), this.current_page = a - 1, c.finish().animate({
            scrollLeft: Math.round(c.find(".page-item").get(this.current_page).offsetLeft - c.width() /
                2)
        }, 1E3), this.dom.pagination_root.find("div").removeClass("active"), $(b).addClass("active");
        this.renderListPaginated()
    },
    renderListPaginated: function() {
        var b = 0, a = 0, c;
        this.dom.tableBody.find("*").remove();
        var d = this.dom.tableBody;
        for (c = 0; c < this.options.data.length; c++)if (!this.options.data[c].filtered_out)if (b < this.options.items_per_page * this.current_page)b++; else {
            if (a++ >= this.options.items_per_page)break;
            this.renderItem(c).appendTo(d).appendTo(this.dom.tableBody)
        }
    },
    renderItem: function(b) {
        var a = this.options.templates.table_row.replace(">",
            ' data-item_list_id="' + b + '">');
        if (this.options.selection) {
            var c = this.options.templates.header_content_selection.replace("%item_id%", b);
            c = this.options.data[b].selected ? c.replace("%checked%", "checked") : c.replace("%checked%", "");
            var d = this.options.templates.table_column.replace("%header_name%", "selected").replace("%value%", c).replace("%unit%", "");
            a += d
        }
        for (c = 0; c < this.tmp_header_shown.length; c++)d = "range" == this.options.header_types[this.tmp_header_shown[c]] || "advanced" == this.options.header_types[this.tmp_header_shown[c]] ?
            this.numberFormatter.format(this.options.data[b][this.tmp_header_shown[c]]) : this.options.data[b][this.tmp_header_shown[c]], d = this.options.templates.table_column.replace("%header_name%", this.tmp_header_shown[c]).replace("%value%", d), d = this.options.units.hasOwnProperty(this.tmp_header_shown[c]) ? d.replace("%unit%", this.options.units[this.tmp_header_shown[c]]) : d.replace("%unit%", ""), a += d;
        a += this.options.templates.table_row_end;
        a = $(a);
        var e = this;
        this.options.no_details || (a.on("mouseenter", function(a) {
            e.renderItemDetails(a,
                b)
        }), a.on("mouseleave", function() {
            e.dom.item_details_placeholder_element.hide()
        }));
        if (this.options.context_menu)a.on("contextmenu", function(a) {
            e.contextMenu(a)
        });
        if (this.options.selection)a.find("input[name=" + b + "]").on("click", function(a) {
            e.toggleItemSelected(a)
        });
        return a
    },
    renderItemDetails: function(b, a) {
        var c;
        var d = this.options.templates.item_details_wrapper;
        for (c = 0; c < this.options.headers.length; c++) {
            var e = this.options.headers[c];
            this.options.header_names && this.options.header_names.hasOwnProperty(this.options.headers[c]) &&
            (e = this.options.header_names[this.options.headers[c]]);
            0 == c % 2 && (d += this.options.templates.item_details_row);
            var g = "range" == this.options.header_types[this.options.headers[c]] ? this.numberFormatter.format(this.options.data[a][this.options.headers[c]]) : this.options.data[a][this.options.headers[c]];
            e = this.options.templates.item_details_attribute.replace("%header%", e).replace("%value%", g);
            e = this.options.units.hasOwnProperty(this.options.headers[c]) ? e.replace("%unit%", this.options.units[this.options.headers[c]]) :
                e.replace("%unit%", "");
            d += e;
            c % this.options.item_details_attribute_per_row == this.options.item_details_attribute_per_row - 1 && (d += this.options.templates.item_details_row_end)
        }
        d += this.options.templates.item_details_wrapper_end;
        this.dom.item_details_placeholder_element.html(d);
        a = b.pageX - this.dom.document_subroot.offset().left;
        b = b.pageY - this.dom.document_subroot.offset().top;
        this.dom.item_details_placeholder_element.css("display", "block").css("left", a).css("top", b + 5)
    },
    getHeaders: function() {
        var b, a, c = [];
        for (b = 0; b < this.options.data.length; b++) {
            var d = Object.keys(this.options.data[b]);
            for (a = 0; a < d.length; a++)-1 == c.indexOf(d[a]) && c.push(d[a])
        }
        this.options.selection && c.indexOf("selected") && c.splice(c.indexOf("selected"), 1);
        this.options.headers = c
    },
    getColumnTypes: function() {
        var b, a = this.options.data.length;
        for (b = 0; b < this.options.headers.length; b++)if (!this.options.header_types.hasOwnProperty(this.options.headers[b]))if (this.isBooleanColumn(this.options.headers[b]))this.options.header_types[this.options.headers[b]] =
            "boolean"; else if (this.isNumericalColumn(this.options.headers[b]))this.options.header_types[this.options.headers[b]] = "range"; else {
            var c = this.getOptions(this.options.headers[b]);
            this.options.header_types[this.options.headers[b]] = c.length < a / 5 && 100 > c.length ? "options" : "string"
        }
    },
    isBooleanColumn: function(b) {
        var a;
        for (a = 0; a < this.options.data.length; a++)if (!0 !== this.options.data[a][b] && !1 !== this.options.data[a][b] && "true" !== this.options.data[a][b] && "false" !== this.options.data[a][b])return !1;
        return !0
    },
    isNumericalColumn: function(b) {
        var a;
        for (a = 0; a < this.options.data.length; a++)if (isNaN(this.options.data[a][b]))return !1;
        return !0
    },
    renderFilters: function() {
        var b, a = this;
        for (b = 0; b < this.options.filters.length; b++) {
            var c = $(this.options.templates.filter_row), d = $(this.options.templates.filter_element_root), e = this.options.filters[b];
            this.options.header_names && this.options.header_names.hasOwnProperty(this.options.filters[b]) && (e = this.options.header_names[this.options.filters[b]]);
            e = $(this.options.templates.filter_element_label.replace("%header%",
                e).replace("%header%", e));
            var g = this.options.sort_by == this.options.filters[b] && 0 == this.options.sort_reverse ? $(this.options.templates.filter_element_sort_down.replace("%sort_selected%", this.options.templates.filter_element_sort_selected)) : $(this.options.templates.filter_element_sort_down.replace("%sort_selected%", ""));
            var f = this.options.sort_by == this.options.filters[b] && 1 == this.options.sort_reverse ? $(this.options.templates.filter_element_sort_up.replace("%sort_selected%", this.options.templates.filter_element_sort_selected)) :
                $(this.options.templates.filter_element_sort_up.replace("%sort_selected%", ""));
            var h = this.options.filters[b];
            f.attr("data-sort-by", h);
            f.attr("data-sort-reverse", "true");
            f.on("click", function(b) {
                a.sortBy(b)
            });
            g.attr("data-sort-by", h);
            g.attr("data-sort-reverse", "false");
            g.on("click", function(b) {
                a.sortBy(b)
            });
            g.appendTo(e);
            f.appendTo(e);
            this.dom.filter_sorters[this.options.filters[b]] = {};
            this.dom.filter_sorters[this.options.filters[b]].up = f;
            this.dom.filter_sorters[this.options.filters[b]].down = g;
            e.appendTo(d);
            g = this.options.header_types[this.options.filters[b]];
            e = $(this.options.templates.filter_element_input_wrapper.replace("%type%", g));
            "string" == g && (f = $(this.options.templates.filter_element_input_string.replace("%header%", this.options.filters[b])), this.filtering.string[this.options.filters[b]] = f, f.on("change", function(b) {
                a.filterItems()
            }), f.on("keyup", function(b) {
                a.filterItems()
            }), f.appendTo(e), e.appendTo(d), d.appendTo(c), c.appendTo(this.dom.filter_page_simple));
            "range" == g && (f = this.getMinMax(this.options.filters[b]),
                f[0] = 0, h = this.options.templates.filter_element_input_range, h = h.replace("%header%", this.options.filters[b]), h = h.replace("%min_value%", f[0]).replace("%min_value%", f[0]).replace("%min_value%", f[0]), h = h.replace("%max_value%", f[1]).replace("%max_value%", f[1]).replace("%max_value%", f[1]), h = h.replace("%min_value_formatted%", this.numberFormatter.format(f[0])), h = h.replace("%max_value_formatted%", this.numberFormatter.format(f[1])), h = h.replace("%unique_id%", this.unique_id), h = this.options.units.hasOwnProperty(this.options.filters[b]) ?
                h.replace("%unit%", this.options.units[this.options.filters[b]]).replace("%unit%", this.options.units[this.options.filters[b]]) : h.replace("%unit%", "").replace("%unit%", ""), f = $(h), f.appendTo(e), e.appendTo(d), d.appendTo(c), c.appendTo(this.dom.filter_page_simple), this.filtering.slider[this.options.filters[b]] = new Slider(f.find("input")[0]), this.filtering.slider[this.options.filters[b]].on("slide", function(b) {
                a.filterItems()
            }));
            if ("options" == g) {
                f = this.getOptions(this.options.filters[b]);
                var k = $(this.options.templates.filter_element_input_enum.replace("%unique_id%",
                    this.unique_id).replace("%header%", this.options.filters[b]));
                this.options.units.hasOwnProperty(this.options.filters[b]);
                for (h = 0; h < f.length; h++) {
                    var l = $(this.options.templates.filter_element_input_enum_option.replace("%value%", f[h]).replace("%value%", f[h]));
                    l.appendTo(k)
                }
                k.on("change", function() {
                    a.filterItems()
                });
                k.appendTo(e);
                e.appendTo(d);
                d.appendTo(c);
                c.appendTo(this.dom.filter_page_simple);
                this.filtering.options[this.options.filters[b]] = k.multiselect({
                    enableFiltering: !0, includeSelectAllOption: !0,
                    maxHeight: 400, numberDisplayed: 2, enableCaseInsensitiveFiltering: !0, onChange: function(b) {
                        a.filterItems();
                        setTimeout(function() {
                            a.correctFilterHeight()
                        }, 50)
                    }
                })
            }
            if ("array_string" == g) {
                f = [];
                for (k = 0; k < this.options.data.length; k++) {
                    var m = this.options.data[k][this.options.filters[b]].split(",");
                    for (h = l = 0; h < m.length; h++)m[h] = m[h].trim();
                    for (h = 0; h < m.length; h++)-1 == f.indexOf(m[h]) && f.push(m[h])
                }
                f.sort(function(a, b) {
                    return a.toLowerCase().localeCompare(b.toLowerCase())
                });
                k = $(this.options.templates.filter_element_input_enum.replace("%unique_id%",
                    this.unique_id).replace("%header%", this.options.filters[b]));
                this.options.units.hasOwnProperty(this.options.filters[b]);
                for (h = 0; h < f.length; h++)l = $(this.options.templates.filter_element_input_enum_option.replace("%value%", f[h]).replace("%value%", f[h])), l.appendTo(k);
                k.appendTo(e);
                e.appendTo(d);
                d.appendTo(c);
                c.appendTo(this.dom.filter_page_simple);
                this.filtering.array_string[this.options.filters[b]] = k.multiselect({
                    enableFiltering: !0,
                    includeSelectAllOption: !0,
                    maxHeight: 400,
                    numberDisplayed: 2,
                    enableCaseInsensitiveFiltering: !0,
                    onChange: function(b) {
                        a.filterItems()
                    }
                })
            }
            if ("array_slider" == g) {
                f = [];
                g = -Infinity;
                for (k = 0; k < this.options.data.length; k++) {
                    var n = [];
                    m = this.options.data[k][this.options.filters[b]].split(",");
                    for (h = l = 0; h < m.length; h++)isNaN(parseInt(m[h].trim())) || (n[l++] = parseInt(m[h].trim()));
                    this.options.data[k][this.options.filters[b] + "_list"] = n;
                    for (h = 0; h < n.length; h++)-1 == f.indexOf(n[h]) && f.push(n[h]);
                    this.options.data[k][this.options.filters[b] + "_max"] = Math.max.apply(Math, $jscomp.arrayFromIterable(n));
                    g = Math.max(this.options.data[k][this.options.filters[b] +
                    "_max"], g)
                }
                f.sort(function(a, b) {
                    return a - b
                });
                f = this.options.templates.filter_element_input_range;
                f = f.replace("%header%", this.options.filters[b]);
                f = f.replace("%min_value%", 0).replace("%min_value%", 0).replace("%min_value%", 0);
                f = f.replace("%max_value%", g).replace("%max_value%", g).replace("%max_value%", g);
                f = f.replace("%min_value_formatted%", this.numberFormatter.format(0));
                f = f.replace("%max_value_formatted%", this.numberFormatter.format(g));
                f = f.replace("%unique_id%", this.unique_id);
                f = this.options.units.hasOwnProperty(this.options.filters[b]) ?
                    f.replace("%unit%", this.options.units[this.options.filters[b]]).replace("%unit%", this.options.units[this.options.filters[b]]) : f.replace("%unit%", "").replace("%unit%", "");
                f = $(f);
                f.appendTo(e);
                e.appendTo(d);
                d.appendTo(c);
                c.appendTo(this.dom.filter_page_simple);
                this.filtering.array_slider[this.options.filters[b]] = new Slider(c.find("input")[0]);
                this.filtering.array_slider[this.options.filters[b]].on("slide", function(b) {
                    a.filterItems()
                })
            }
        }
    },
    renderAdvancedFilters: function() {
        var b = this;
        this.dom.filter_page_advanced =
            $(this.options.templates.filter_page_advanced);
        this.dom.filter_advanced_toggle_show = $(this.options.templates.filter_advanced_toggle_show);
        this.dom.filter_page_advanced.appendTo(this.dom.filter_root_wrapper);
        this.dom.filter_advanced_toggle_show.appendTo(this.dom.filter_root);
        this.dom.filter_advanced_toggle_show.on("click", function(a) {
            b.toggleAdvancedFilter()
        });
        var a, c, d;
        for (a = 0; a < this.options.advanced_filters.length; a++) {
            this.options.advanced_filters[a].formula || (this.options.advanced_filters[a].formula =
                this.options.advanced_filters[a].name);
            for (c = 0; c < this.options.data.length; c++) {
                var e = this.options.advanced_filters[a].formula;
                for (d = 0; d < this.options.headers.length; d++)e = isNaN(parseInt(this.options.headers[d])) ? e.replace(new RegExp(this.options.headers[d], "gi"), this.options.data[c][this.options.headers[d]]) : e.replace(new RegExp("col_" + this.options.headers[d] + "_", "gi"), this.options.data[c][this.options.headers[d]]);
                this.options.data[c][this.options.advanced_filters[a].name] = eval(e)
            }
            c = $(this.options.templates.filter_row);
            d = $(this.options.templates.filter_element_root);
            e = $(this.options.templates.filter_element_label.replace("%header%", this.options.advanced_filters[a].name).replace("%header%", this.options.advanced_filters[a].name));
            var g = this.options.sort_by == this.options.advanced_filters[a] && 0 == this.options.sort_reverse ? $(this.options.templates.filter_element_sort_down.replace("%sort_selected%", this.options.templates.filter_element_sort_selected)) : $(this.options.templates.filter_element_sort_down.replace("%sort_selected%",
                ""));
            var f = this.options.sort_by == this.options.advanced_filters[a] && 1 == this.options.sort_reverse ? $(this.options.templates.filter_element_sort_up.replace("%sort_selected%", this.options.templates.filter_element_sort_selected)) : $(this.options.templates.filter_element_sort_up.replace("%sort_selected%", ""));
            var h = this.options.advanced_filters[a].name;
            f.attr("data-sort-by", h);
            f.attr("data-sort-reverse", "true");
            f.on("click", function(a) {
                b.sortBy(a)
            });
            g.attr("data-sort-by", h);
            g.attr("data-sort-reverse", "false");
            g.on("click", function(a) {
                b.sortBy(a)
            });
            g.appendTo(e);
            f.appendTo(e);
            this.dom.filter_sorters[this.options.advanced_filters[a].name] = {};
            this.dom.filter_sorters[this.options.advanced_filters[a].name].up = f;
            this.dom.filter_sorters[this.options.advanced_filters[a].name].down = g;
            e.appendTo(d);
            e = $(this.options.templates.filter_element_input_wrapper.replace("%type%", "advanced"));
            g = this.getMinMax(this.options.advanced_filters[a].name);
            g[0] = 0;
            g[1] *= 1.05;
            f = this.options.templates.filter_element_input_range;
            f = f.replace("%header%",
                this.options.advanced_filters[a].name);
            f = f.replace("%min_value%", g[0]).replace("%min_value%", g[0]).replace("%min_value%", g[0]);
            f = f.replace("%max_value%", g[1]).replace("%max_value%", g[1]).replace("%max_value%", g[1]);
            f = f.replace("%min_value_formatted%", this.numberFormatter.format(g[0]));
            f = f.replace("%max_value_formatted%", this.numberFormatter.format(g[1]));
            f = f.replace("%unique_id%", this.unique_id);
            f = this.options.advanced_filters[a].hasOwnProperty("units") ? f.replace("%unit%", this.options.advanced_filters[a].unit).replace("%unit%",
                this.options.advanced_filters[a].unit) : f.replace("%unit%", "").replace("%unit%", "");
            $(f).appendTo(e);
            e.appendTo(d);
            d.appendTo(c);
            c.appendTo(this.dom.filter_page_advanced);
            this.filtering.advanced[this.options.advanced_filters[a].name] = new Slider(c.find("input")[0]);
            this.filtering.advanced[this.options.advanced_filters[a].name].on("slide", function(a) {
                b.filterItems()
            });
            this.options.header_types[this.options.advanced_filters[a].name] = "advanced"
        }
    },
    toggleAdvancedFilter: function() {
        var b = this;
        this.advanced_filters_show ?
            (this.dom.filter_root_wrapper.animate({left: 0}, 1E3), this.dom.filter_advanced_toggle_show.removeClass(this.options.templates.filter_toggle_active_class), this.dom.filter_advanced_toggle_show.addClass(this.options.templates.filter_toggle_inactive_class), setTimeout(function() {
                    b.dom.filter_advanced_toggle_show.addClass("oi-caret-left");
                    b.dom.filter_advanced_toggle_show.removeClass("oi-caret-right");
                    b.dom.filter_advanced_toggle_show.addClass(b.options.templates.filter_toggle_active_class);
                    b.dom.filter_advanced_toggle_show.removeClass(b.options.templates.filter_toggle_inactive_class)
                },
                1E3), this.advanced_filters_show = !1) : (this.dom.filter_root_wrapper.animate({left: -250}, 1E3), this.dom.filter_advanced_toggle_show.removeClass(this.options.templates.filter_toggle_active_class), this.dom.filter_advanced_toggle_show.addClass(this.options.templates.filter_toggle_inactive_class), setTimeout(function() {
            b.dom.filter_advanced_toggle_show.removeClass("oi-caret-left");
            b.dom.filter_advanced_toggle_show.addClass("oi-caret-right");
            b.dom.filter_advanced_toggle_show.addClass(b.options.templates.filter_toggle_active_class);
            b.dom.filter_advanced_toggle_show.removeClass(b.options.templates.filter_toggle_inactive_class)
        }, 1E3), this.advanced_filters_show = !0)
    },
    filterItems: function() {
        var b;
        for (b = 0; b < this.options.data.length; b++)this.options.data[b].filtered_out = !1;
        var a = Object.keys(this.filtering.string);
        for (b = 0; b < a.length; b++)this.filterByString(a[b], this.filtering.string[a[b]].val());
        a = Object.keys(this.filtering.slider);
        for (b = 0; b < a.length; b++)this.filterBySlider(a[b], this.filtering.slider[a[b]]);
        a = Object.keys(this.filtering.options);
        for (b = 0; b < a.length; b++)this.filterByOptions(a[b], this.filtering.options[a[b]]);
        a = Object.keys(this.filtering.array_string);
        for (b = 0; b < a.length; b++)this.filterByArraySelect(a[b], this.filtering.array_string[a[b]]);
        a = Object.keys(this.filtering.array_slider);
        for (b = 0; b < a.length; b++)this.filterByArraySlider(a[b], this.filtering.array_slider[a[b]]);
        a = Object.keys(this.filtering.advanced);
        for (b = 0; b < a.length; b++)this.filterBySlider(a[b], this.filtering.advanced[a[b]]);
        if (this.options.hasOwnProperty("external_filters") &&
            this.options.external_filters)for (a = Object.keys(this.options.external_filters), b = 0; b < a.length; b++)"range" == this.options.external_filters[a[b]].type && this.filterByRange(this.options.external_filters[a[b]].name, this.options.external_filters[a[b]].min, this.options.external_filters[a[b]].max), "string" == this.options.external_filters[a[b]].type && this.filterByString(this.options.external_filters[a[b]].name, this.options.external_filters[a[b]].string), "array_range" == this.options.external_filters[a[b]].type &&
        this.filterByArrayRange(this.options.external_filters[a[b]].name, this.options.external_filters[a[b]].min, this.options.external_filters[a[b]].max), "array_string" != this.options.external_filters[a[b]].type && "enum" != this.options.external_filters[a[b]].type || this.filterByArrayString(this.options.external_filters[a[b]].name, this.options.external_filters[a[b]].enums);
        b = this.countRendered();
        this.rendered_item_pages = Math.max(1, Math.ceil(b / this.options.items_per_page));
        this.current_page = 0;
        this.renderPagination();
        this.renderListPaginated();
        a = Object.keys(this.filtering.options);
        for (b = 0; b < a.length; b++)this.disableUnavailableOptions(a[b], this.filtering.options[a[b]])
    },
    generateRandomString: function(b) {
        for (var a = "", c = 0; c < b; c++)a += "abcdefghijklmnopqrstuvwxyz0123456789".charAt(Math.floor(36 * Math.random()));
        return a
    },
    countRendered: function() {
        var b, a = 0;
        for (b = 0; b < this.options.data.length; b++)this.options.data[b].filtered_out || a++;
        return a
    },
    correctFilterHeight: function() {
        this.dom.filter_root.animate({
            "min-height": Math.max(this.dom.filter_root_wrapper.height(),
                this.dom.filter_page_advanced.height()) + 10
        }, this.options.filter_animation_time)
    },
    toggleShowFilters: function() {
        var b = this.options.filter_animation_time, a = this;
        this.filters_show ? (this.dom.filter_root.animate({width: "0"}, b), this.dom.root_wrapper.animate({"margin-right": "0"}, b), this.dom.filter_toggle_show.removeClass(this.options.templates.filter_toggle_active_class), this.dom.filter_toggle_show.addClass(this.options.templates.filter_toggle_inactive_class), setTimeout(function() {
            a.dom.filter_toggle_show.addClass("oi-caret-left");
            a.dom.filter_toggle_show.removeClass("oi-caret-right");
            a.dom.filter_toggle_show.addClass(a.options.templates.filter_toggle_active_class);
            a.dom.filter_toggle_show.removeClass(a.options.templates.filter_toggle_inactive_class)
        }, b / 2), setTimeout(function() {
            a.dom.root_wrapper.animate({"min-height": 0}, b / 2)
        }, b / 1.5), this.filters_show = !1) : (this.dom.root_wrapper.css("min-height", 0), this.dom.root_wrapper.animate({"min-height": this.dom.filter_root_wrapper.height()}, b / 2), setTimeout(function() {
            a.dom.filter_root.animate({width: "250px"},
                b);
            a.dom.root_wrapper.animate({"margin-right": "250px"}, b);
            a.dom.filter_toggle_show.removeClass(a.options.templates.filter_toggle_active_class);
            a.dom.filter_toggle_show.addClass(a.options.templates.filter_toggle_inactive_class);
            setTimeout(function() {
                    a.dom.filter_toggle_show.removeClass("oi-caret-left");
                    a.dom.filter_toggle_show.addClass("oi-caret-right");
                    a.dom.filter_toggle_show.addClass(a.options.templates.filter_toggle_active_class);
                    a.dom.filter_toggle_show.removeClass(a.options.templates.filter_toggle_inactive_class)
                },
                1.1 * b)
        }, b / 1.7), this.filters_show = !0)
    },
    toggleItemSelected: function(b) {
        var a = $(b.currentTarget).attr("name"), c = !this.options.data[a].selected;
        this.options.data[a].selected = c;
        $(b.currentTarget).prop("checked", c)
    },
    listSelectedAttribute: function(b) {
        var a, c = [];
        for (a = 0; a < this.options.data.length; a++)this.options.data[a].selected && c.push(this.options.data[a][b]);
        return c
    },
    listSelectedElements: function() {
        var b, a = [];
        for (b = 0; b < this.options.data.length; b++)this.options.data[b].selected && a.push(this.options.data[b]);
        return a
    },
    externalFilter: function(b) {
        this.options.external_filters = b;
        this.filterItems()
    },
    downloadSelected: function(b) {
        var a = this.listSelectedElements(), c = "Invalid format";
        this.dom.download_href_placeholder.attr("download", "selected.txt");
        "JSON" == b && (c = "data:text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(a)), this.dom.download_href_placeholder.attr("download", "selected.json"));
        if ("CSV" == b) {
            c = "data:text/csv;charset=utf-8,";
            var d = "", e, g = this.options.headers.slice(0);
            g.push("selected");
            d +=
                g.join(",") + "\r\n";
            for (e = 0; e < a.length; e++) {
                var f = [];
                for (j = 0; j < g.length; j++)f.push('"' + a[e][g[j]] + '"');
                d += f.join(",") + "\r\n"
            }
            c += encodeURIComponent(d);
            this.dom.download_href_placeholder.attr("download", "selected.csv")
        }
        if ("TXT" == b) {
            c = "data:text/text;charset=utf-8,";
            for (e = 0; e < a.length; e++) {
                f = [];
                for (j = 0; j < this.options.headers.length; j++)f.push(a[e][this.options.headers[j]]);
                c += f.join(" ") + "\r\n"
            }
            this.dom.download_href_placeholder.attr("download", "selected.txt")
        }
        if ("XML1" == b) {
            c = 'data:text/xml;charset=utf-8,<?xml version="1.0" encoding="utf-8"?><tabledata>';
            for (e = 0; e < a.length; e++) {
                c += "<row";
                for (j = 0; j < this.options.headers.length; j++)c += ' "' + this.options.headers[j] + '"="', c += a[e][this.options.headers[j]], c += '"';
                c += "/>\r\n"
            }
            c += "</tabledata>\r\n";
            this.dom.download_href_placeholder.attr("download", "selected.xml")
        }
        if ("XML2" == b) {
            c = 'data:text/xml;charset=utf-8,<?xml version="1.0" encoding="utf-8"?><tabledata>';
            for (e = 0; e < a.length; e++) {
                c += "<row>";
                for (j = 0; j < this.options.headers.length; j++)c += "<" + this.options.headers[j] + ">", c += a[e][this.options.headers[j]], c += "</" +
                    this.options.headers[j] + ">";
                c += "</row>\r\n"
            }
            c += "</tabledata>\r\n";
            this.dom.download_href_placeholder.attr("download", "selected.xml")
        }
        if ("SQL" == b) {
            c = "data:text/sql;charset=utf-8,INSERT INTO `Table` (";
            e = this.options.headers;
            isNaN(parseInt(this.options.headers[0])) || (e = this.options.header_names);
            c += "'" + e.join("', '") + "'";
            c += "), values";
            b = [];
            for (e = 0; e < a.length; e++) {
                d = [];
                for (j = 0; j < this.options.headers.length; j++)d.push(a[e][this.options.headers[j]]);
                b.push("'" + d.join("', '") + "'")
            }
            c += "(" + b.join("), (") +
                ")";
            c += ";";
            this.dom.download_href_placeholder.attr("download", "selected.sql")
        }
        this.dom.download_href_placeholder.attr("href", c);
        this.dom.download_href_placeholder[0].click()
    },
    contextMenu: function(b) {
        var a = b.pageX - this.dom.document_subroot.offset().left, c = b.pageY - this.dom.document_subroot.offset().top;
        this.dom.context_menu.finish().toggle().css("left", a - 10).css("top", c - 10);
        this.context_menu_column = $(b.target).attr("class").replace("item_", "");
        this.context_menu_row = $(b.target).parent().attr("data-item_list_id");
        this.options.no_details || this.dom.item_details_placeholder_element.css("display", "none");
        b.preventDefault()
    },
    contextMenuClose: function() {
        this.dom.context_menu.hide()
    },
    contextMenuEvent: function(b) {
        if ($(b.target)[0] != this.dom.context_menu[0]) {
            var a;
            b = $(b.target).attr("data-action");
            if ("select_unfiltered" == b) {
                for (a = 0; a < this.options.data.length; a++)this.options.data[a].selected = !this.options.data[a].filtered_out;
                this.renderListPaginated()
            }
            if ("unselect_all" == b) {
                for (a = 0; a < this.options.data.length; a++)this.options.data[a].selected = !1;
                this.renderListPaginated()
            }
            if ("filter_like" == b) {
                (a = this.options.external_filters) || (a = []);
                var c = {};
                c.name = this.context_menu_column;
                "range" == this.options.header_types[this.context_menu_column] && (c.type = "range", c.min = this.options.data[this.context_menu_row][this.context_menu_column], c.max = this.options.data[this.context_menu_row][this.context_menu_column]);
                if ("string" == this.options.header_types[this.context_menu_column] || "options" == this.options.header_types[this.context_menu_column])c.type = "string",
                    c.string = this.options.data[this.context_menu_row][this.context_menu_column].trim();
                a.push(c);
                this.options.external_filters = a;
                this.filterItems()
            }
            "filter_manual_reset" == b && (this.options.external_filters = !1, this.filterItems());
            if ("filter_all_reset" == b) {
                keys = Object.keys(this.filtering.string);
                for (a = 0; a < keys.length; a++)this.filtering.string[keys[a]].val("");
                keys = Object.keys(this.filtering.slider);
                for (a = 0; a < keys.length; a++)this.filtering.slider[keys[a]].setValue(this.filtering.slider[keys[a]].options.value);
                keys = Object.keys(this.filtering.options);
                for (a = 0; a < keys.length; a++)this.filtering.options[keys[a]].find("option").prop("selected", !1), this.filtering.options[keys[a]].multiselect("refresh");
                keys = Object.keys(this.filtering.array_string);
                for (a = 0; a < keys.length; a++)this.filtering.options[keys[a]].find("option").prop("selected", !1), this.filtering.options[keys[a]].multiselect("refresh");
                keys = Object.keys(this.filtering.array_slider);
                for (a = 0; a < keys.length; a++)this.filtering.slider[keys[a]].setValue(this.filtering.slider[keys[a]].options.value);
                keys = Object.keys(this.filtering.advanced);
                for (a = 0; a < keys.length; a++)this.filtering.advanced[keys[a]].setValue(this.filtering.advanced[keys[a]].options.value);
                this.options.external_filters = !1;
                this.filterItems()
            }
            -1 != b.indexOf("download_") && (b = b.replace("download_", ""), this.downloadSelected(b));
            this.contextMenuClose()
        }
    }
};
$.fn.dataprospector = function(b) {
    var a = $(this).data("dataprospector");
    a || (a = new Dataprospector(this, b), $(this).data("dataprospector", a))
};
$.fn.dataprospector.Constructor = Dataprospector;
